
# Global define (Required)
global:
  # Full name override
  fullnameOverride: "gitlab"
  # Name override
  nameOverride: "gitlab"
  # Kube version
  kubeVersion: ""

# Controller
controller:
  # Registry (Docker Hub) image default docker.io
  registry: "docker.io"
  # Image name
  image: "gitlab/gitlab-ce"
  # Version image default Chart app version
  version: "16.2.8-ce.0"
  # Pull policy default IfNotPresent
  pullPolicy: "IfNotPresent"
  # Replica count
  replicaCount: 1
  # Pod labels
  podLabels: {}
  # Host network
  hostNetwork: false
  # GitLab root password (default random)
  password: ""
  # External URL
  externalUrl: ""
  # Extra environment variables
  # - name: ""
  #   value: ""
  # - name:
  #   valueFrom:
  #     configMapKeyRef(secretKeyRef):
  #       name:  ""
  #       key: ""
  extraEnvs: []
  # Extra configurations GitLab app
  # extraConfigs: |
  #   letsencrypt['contact_emails'] = ['*'] # Optional
  extraConfigs: ""
  # (Controller port) HTTP port
  httpPort: 80
  # Pod annotations
  podAnnotations: {}
  # Image pull secrets
  imagePullSecrets: []
  # Pod security context
  podSecurityContext:
    {}
    # fsGroup: 2000
  # Security context
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  # GitLab home volume mount data host path (default /tmp/gitlab)
  volumeHostPath: ""
  # GitLab home volume type (default DirectoryOrCreate)
  volumeType: ""
  # Extra volume mounts
  extraVolumeMounts: []
  # Extra volumes
  extraVolumes: []
  # Persistent volume claim
  persistentVolumeClaim: ""
  # Node selector
  nodeSelector: {}
  # Affinity
  affinity: {}
  # Tolerations
  tolerations: []
  # Service of controller configuration
  service:
    # Service type ClusterIP, LoadBalancer, NodePort default (LoadBalancer)
    type: ""
    # HTTP port
    httpPort: 80
    # ClusterIP with service type ClusterIP
    clusterIP: ""
    # Node port configuration
    nodePort: 30080

  # Service account configuration
  serviceAccount:
    # Create new service account
    create: true
    # Service account name
    name: ""
    # Service account annotations
    # Key: Value
    annotations: {}

  # Autoscaling horizontal (HorizontalPodAutoscaler)
  autoscaling:
    # Enable autoscaling
    enabled: false
    # The annotations of teh Gitlab CE
    annotations: {}
    # Min replicas
    minReplicas: 1
    # Max replicas
    maxReplicas: 10
    # Metric CPU resource (CPU percentage)
    targetCPUUtilizationPercentage: 80
    # Metric memory resource (Memory - RAM percentage)
    targetMemoryUtilizationPercentage: 80
    # Custom behavior policies
    behavior: {}

  # Ingress configuration (Option)
  ingress:
    # Enable ingress
    enabled: false
    # Annotations
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # Ingress class name
    ingressClassName: ""
    # Host configuration
    host: ""
    # TLS configuration
    tls: {}
    # Extra hosts configuration
    extraHosts: []
    # Extra TLSs configuration
    # - host: chart.example
    #   paths:
    #     pathType: ImplementationSpecific
    #     path: /
    extraTls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

  # Network Policy
  networkPolicy:
    # Enabled network policy
    enabled: false

  # Pod Disruption Budget
  pdb:
    # Enabled pod disruption budget
    enabled: false
    # Min available
    minAvailable: 1

  # Persistent volume claim configuration
  pvc:
    # Create a persistent volume claim
    create: false
    # Storage class name
    storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
    # Persistent volume name
    volumeName: ""

  # Persistent volume
  pv:
    # Create a persistent volume
    create: false
    # Storage class name
    storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
    # Claim ref
    claimRef:
      # Name of persistent volume claim
      name: ""
      # Namespace
      namespace: ""

# Postgres HA configuration
postgres-ha:
  # Enable a new PostgreSQL database
  enabled: true
  # Fullname
  fullname: ""
  # Name
  name: ""
  # Backup configuration
  backup:
    # Enable backup database
    enabled: false

# Redis HA configuration
redis-ha:
  # Enable a new Redis server
  enabled: true

  namespaceOverride:

  port: 6379

  service:
    create: true

    port: 6379

  serviceAccount:
    create: true

---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata: 
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  {{- if .Values.annotations }}
  annotations: 
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.podLabels" . | nindent 8 }}
      {{- if .Values.pod.annotations }}
      annotations:
        {{- toYaml .Values.pod.annotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      {{- end }}

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccount.name" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      hostNetwork: {{ .Values.hostNetwork }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- if .Values.shareProcessNamespace }}
      shareProcessNamespace: true
      {{- end }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
        {{- end }}
      containers:
        - image: {{- include "common.images.image.render" (dict "image" .Values.image "context" $) -}}
          name: {{ include "common.names.name" . }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command:
            - cloudflared
            - tunnel
            - --no-autoupdate
            # In a k8s environment, the metrics server needs to listen outside the pod it runs on.
            # The address 0.0.0.0:2000 allows any pod in the namespace.
            - --metrics
            - 0.0.0.0:2000
            - run
          args:
            - --token
            - {{ printf "%s" .Values.cloudflared.token | required "require cloudflared token" | quote }}
            {{- if .Values.extraArgs }}
            {{- toYaml .Values.extraArgs | nindent 12 }}
            {{- end }}
          {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          envFrom:
            {{- if .Values.extraEnvFrom }}
            {{- toYaml .Values.extraEnvFrom | nindent 12 }}
            {{- end }}
          env:
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
          {{- if and .Values.livenessProbe .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
        {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  {{- if .Values.minReadySeconds }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  {{- end }}
